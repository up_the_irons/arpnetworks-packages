From 46532e3e8ed5f5a736a02f67d6c805492f9ca720 Mon Sep 17 00:00:00 2001
From: Peter Krempa <pkrempa@redhat.com>
Date: Fri, 4 Jan 2013 16:15:04 +0100
Subject: [PATCH] rpc: Fix crash on error paths of message dispatching

This patch resolves CVE-2013-0170:
https://bugzilla.redhat.com/show_bug.cgi?id=893450

When reading and dispatching of a message failed the message was freed
but wasn't removed from the message queue.

After that when the connection was about to be closed the pointer for
the message was still present in the queue and it was passed to
virNetMessageFree which tried to call the callback function from an
uninitialized pointer.

This patch removes the message from the queue before it's freed.

* rpc/virnetserverclient.c: virNetServerClientDispatchRead:
    - avoid use after free of RPC messages
---
 src/rpc/virnetserverclient.c |    3 +++
 1 files changed, 3 insertions(+), 0 deletions(-)

Index: libvirt-0.9.8/src/rpc/virnetserverclient.c
===================================================================
--- libvirt-0.9.8.orig/src/rpc/virnetserverclient.c	2011-12-01 22:59:50.000000000 -0500
+++ libvirt-0.9.8/src/rpc/virnetserverclient.c	2013-01-28 15:21:42.046800118 -0500
@@ -840,6 +840,7 @@
 
         /* Decode the header so we can use it for routing decisions */
         if (virNetMessageDecodeHeader(msg) < 0) {
+            virNetMessageQueueServe(&client->rx);
             virNetMessageFree(msg);
             client->wantClose = true;
             return;
@@ -849,6 +850,7 @@
          * file descriptors */
         if (msg->header.type == VIR_NET_CALL_WITH_FDS &&
             virNetMessageDecodeNumFDs(msg) < 0) {
+            virNetMessageQueueServe(&client->rx);
             virNetMessageFree(msg);
             client->wantClose = true;
             return; /* Error */
@@ -858,6 +860,7 @@
         for (i = msg->donefds ; i < msg->nfds ; i++) {
             int rv;
             if ((rv = virNetSocketRecvFD(client->sock, &(msg->fds[i]))) < 0) {
+                virNetMessageQueueServe(&client->rx);
                 virNetMessageFree(msg);
                 client->wantClose = true;
                 return;
